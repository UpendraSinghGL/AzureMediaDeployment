{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"connection_commondataservice": {
			"type": "string",
			"defaultValue": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/connections/commondataservice')]"
		},
		"crmOrgName": {
			"type": "string",
			"metadata": {
				"description": "description"
			}
		}
	},
	"functions": [
		{
			"namespace": "durin",
			"members": {
				"wrapInQuote": {
					"parameters": [
						{
							"name": "text",
							"type": "string"
						}
					],
					"output": {
						"value": "[concat('''', parameters('text'),'''')]",
						"type": "string"
					}
				}
			}
		}
	],
	"variables": {
		"org": "[durin.wrapInQuote(concat(parameters('crmOrgName'),'.crm'))]"
	},
	"resources": [
		{
			"type": "Microsoft.Logic/workflows",
			"apiVersion": "2017-07-01",
			"name": "Logic-CreateVendorContainer",
			"location": "[resourceGroup().location]",
			"properties": {
				"definition": {
					"$schema": "https://schema.management.azure.com/schemas/2016-06-01/Microsoft.Logic.json",
					"contentVersion": "1.0.0.0",
					"parameters": {
						"$connections": {
							"defaultValue": {},
							"type": "Object"
						}
					},
					"triggers": {
						"When_a_record_is_created": {
							"type": "ApiConnectionWebhook",
							"inputs": {
								"body": {
									"NotificationUrl": "@{listCallbackUrl()}"
								},
								"host": {
									"connection": {
										"name": "@parameters('$connections')['commondataservice']['connectionId']"
									}
								},
								"path": "[concat('/datasets/@{encodeURIComponent(encodeURIComponent(',variables('org'),'))}/tables/@{encodeURIComponent(encodeURIComponent(',durin.wrapInQuote('media_vendors'),'))}/onnewitemswebhook')]",
								"queries": {
									"scope": "Organization"
								}
							}
						}
					},
					"actions": {
						"Create_error_log_record": {
							"runAfter": {
								"Scope": [
									"Failed",
									"TimedOut"
								]
							},
							"type": "ApiConnection",
							"inputs": {
								"body": {
									"_media_vendor_value": "@triggerBody()?['media_vendorid']",
									"media_description": "@{result('Scope')}",
									"media_name": "@variables('ErrorMessage')"
								},
								"host": {
									"connection": {
										"name": "@parameters('$connections')['commondataservice']['connectionId']"
									}
								},
								"method": "post",
								"path": "[concat('/v2/datasets/@{encodeURIComponent(encodeURIComponent(',variables('org'),'))}/tables/@{encodeURIComponent(encodeURIComponent(',durin.wrapInQuote('media_asseterrorlogs'),'))}/items')]",
							}
						},
						"Initialize_variable_-_ErrorMessage": {
							"runAfter": {
								"Initialize_variable_configurations": [
									"Succeeded"
								]
							},
							"type": "InitializeVariable",
							"inputs": {
								"variables": [
									{
										"name": "ErrorMessage",
										"type": "string"
									}
								]
							}
						},
						"Initialize_variable_ContainerName": {
							"runAfter": {
								"Initialize_variable_-_ErrorMessage": [
									"Succeeded"
								]
							},
							"type": "InitializeVariable",
							"inputs": {
								"variables": [
									{
										"name": "ContainerName",
										"type": "string",
										"value": "@{trim(toLower(replace(triggerBody()?['media_name'],' ','-')))}"
									}
								]
							}
						},
						"Initialize_variable_configurations": {
							"runAfter": {},
							"type": "InitializeVariable",
							"inputs": {
								"variables": [
									{
										"name": "AzureConfigurations",
										"type": "object",
										"value": {
											"AadClientId": "92ea57a5-102d-40b7-aa5b-0bfa12be2765",
											"AadSecret": "f.ICB5M2_Jk9-JiFwuv4Bh7okboTp.dwwv",
											"AadTenantDomain": "microsoft.onmicrosoft.com",
											"AadTenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
											"AccountName": "durinmediavendorstorage",
											"ArmAadAudience": "https://management.core.windows.net/",
											"ArmEndpoint": "https://management.azure.com/",
											"Location": "Southeast Asia, East Asia",
											"ResourceGroup": "MediaAzureProject",
											"StorageAccountName": "durinmediavendorstorage",
											"SubscriptionId": "6ea8ecbe-a178-422c-b3c3-ed034a2729fb",
											"api-version": "2019-06-01"
										}
									}
								]
							}
						},
						"Response_failure": {
							"runAfter": {
								"Create_error_log_record": [
									"Succeeded"
								]
							},
							"type": "Response",
							"kind": "Http",
							"inputs": {
								"body": {
									"Message": "Failed to create Vendor container and Update folder Path"
								},
								"statusCode": 500
							}
						},
						"Response_success": {
							"runAfter": {
								"Scope": [
									"Succeeded"
								]
							},
							"type": "Response",
							"kind": "Http",
							"inputs": {
								"body": {
									"Message": "Vendor created and path updated successfully"
								},
								"statusCode": 200
							}
						},
						"Scope": {
							"actions": {
								"HTTP_-_Create_Container": {
									"runAfter": {
										"HTTP_-_Get_Azure_AD_Token_for_Service_Principal_Authentication": [
											"Succeeded"
										]
									},
									"type": "Http",
									"inputs": {
										"body": {},
										"headers": {
											"Authorization": "Bearer @{body('HTTP_-_Get_Azure_AD_Token_for_Service_Principal_Authentication')?['access_token']}",
											"Content-Type": "application/json"
										},
										"method": "PUT",
										"uri": "@{concat('https://management.azure.com/subscriptions/',variables('AzureConfigurations')?['SubscriptionId'],'/resourceGroups/',variables('AzureConfigurations')?['ResourceGroup'],'/providers/Microsoft.Storage/storageAccounts/',variables('AzureConfigurations')?['StorageAccountName'],'/blobServices/default/containers/',variables('ContainerName'),'?api-version=',variables('AzureConfigurations')?['api-version'])}"
									}
								},
								"HTTP_-_Get_Azure_AD_Token_for_Service_Principal_Authentication": {
									"runAfter": {},
									"type": "Http",
									"inputs": {
										"body": "grant_type=client_credentials&client_id=@{variables('AzureConfigurations')?['AadClientId']}&client_secret=@{variables('AzureConfigurations')?['AadSecret']}&resource=https://management.core.windows.net/",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded",
											"Keep-Alive": "true"
										},
										"method": "POST",
										"uri": "@{concat('https://login.microsoftonline.com/',variables('AzureConfigurations')?['AadTenantDomain'],'/oauth2/token')}"
									}
								},
								"Set_variable_-_HTTP_-_Get_Azure_AD_Token_-_ErrorMessage": {
									"runAfter": {
										"HTTP_-_Get_Azure_AD_Token_for_Service_Principal_Authentication": [
											"Failed",
											"TimedOut"
										]
									},
									"type": "SetVariable",
									"inputs": {
										"name": "ErrorMessage",
										"value": "Failed to fetch Azure AD Token for Service Principal Authentication"
									}
								},
								"Set_variable_-_HTTP_Create_Container_-_ErrorMessage": {
									"runAfter": {
										"HTTP_-_Create_Container": [
											"Failed",
											"TimedOut"
										]
									},
									"type": "SetVariable",
									"inputs": {
										"name": "ErrorMessage",
										"value": "Failed to create Container of VendorID: @{triggerBody()?['media_vendorid']}"
									}
								},
								"Update_a_record": {
									"runAfter": {
										"HTTP_-_Create_Container": [
											"Succeeded"
										]
									},
									"type": "ApiConnection",
									"inputs": {
										"body": {
											"_ownerid_type": "",
											"media_folderpath": "@{body('HTTP_-_Create_Container')?['name']}"
										},
										"host": {
											"connection": {
												"name": "@parameters('$connections')['commondataservice']['connectionId']"
											}
										},
										"method": "patch",
										"path": "[concat('/v2/datasets/@{encodeURIComponent(encodeURIComponent(',variables('org'),'))}/tables/@{encodeURIComponent(encodeURIComponent(',durin.wrapInQuote('media_vendors'),'))}/items/@{encodeURIComponent(encodeURIComponent(triggerBody()?[',durin.wrapInQuote('media_vendorid'),']))}')]",
									}
								}
							},
							"runAfter": {
								"Initialize_variable_ContainerName": [
									"Succeeded"
								]
							},
							"type": "Scope"
						}
					},
					"outputs": {}
				},
				"parameters": {
					"$connections": {
						"value": {
							"commondataservice": {
								"connectionId": "[parameters('connection_commondataservice')]",
								"connectionName": "commondataservice",
								"id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/commondataservice')]"
							}
						}
					}
				}
			}
		}
	]
}